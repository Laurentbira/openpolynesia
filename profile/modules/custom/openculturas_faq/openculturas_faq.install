<?php

/**
 * @file
 * Install, update and uninstall functions for the openculturas_faq module.
 */

declare(strict_types = 1);

use Drupal\Core\Field\FieldConfigInterface;
use Drupal\field\Entity\FieldConfig;
use Drupal\user\Entity\Role;
use Drupal\user\RoleInterface;

/**
 * Implements hook_install().
 */
function openculturas_faq_install(bool $is_syncing): void {
  if ($is_syncing) {
    return;
  }
  /** @var \Drupal\user\RoleInterface|null $role */
  $role = Role::load('oc_admin');
  if ($role instanceof RoleInterface) {
    $role->grantPermission('create faq content');
    $role->grantPermission('create terms in faq_category');
    $role->grantPermission('delete any faq content');
    $role->grantPermission('delete faq revisions');
    $role->grantPermission('delete own faq content');
    $role->grantPermission('delete terms in faq_category');
    $role->grantPermission('edit any faq content');
    $role->grantPermission('edit own faq content');
    $role->grantPermission('edit terms in faq_category');
    $role->grantPermission('revert faq revisions');
    $role->grantPermission('translate faq node');
    $role->grantPermission('translate faq_category taxonomy_term');
    $role->grantPermission('view faq revisions');
    $role->save();
  }
  /** @var \Drupal\Core\Field\FieldConfigInterface|null $field */
  $field = FieldConfig::loadByName('paragraph', 'view', 'field_view');
  if ($field instanceof FieldConfigInterface) {
    $allowed_views_setting = $field->getSetting('allowed_views');
    $allowed_views_setting['faq'] = 'faq';
    $field->setSetting('allowed_views', $allowed_views_setting);
    $field->save();
  }

}

/**
 * Implements hook_update_dependencies().
 */
function openculturas_faq_update_dependencies(): array {
  return [
    'openculturas_faq' => [
      9301 => [
        'openculturas' => 9302,
      ],
    ],
  ];
}

/**
 * Installs the view display teaser_unified.
 */
function openculturas_faq_update_9301(): string {
  /** @var \Drupal\update_helper\Updater $updater */
  $updater = \Drupal::service('update_helper.updater');

  // Execute configuration update definitions with logging of success.
  $updater->executeUpdate('openculturas_faq', 'openculturas_faq_update_9301');

  // Output logged messages to related channel of update execution.
  return $updater->logger()->output();
}

/**
 * Installs form mode bulk_edit.
 */
function openculturas_faq_update_9302(): string {
  /** @var \Drupal\update_helper\Updater $updater */
  $updater = \Drupal::service('update_helper.updater');

  // Execute configuration update definitions with logging of success.
  $updater->executeUpdate('openculturas_faq', 'openculturas_faq_update_9302');

  // Output logged messages to related channel of update execution.
  return $updater->logger()->output();
}

/**
 * Setup entity view displays search_index and search_result.
 */
function openculturas_faq_update_9303(): string {
  /** @var \Drupal\update_helper\Updater $updater */
  $updater = \Drupal::service('update_helper.updater');

  // Execute configuration update definitions with logging of success.
  $updater->executeUpdate('openculturas_faq', 'openculturas_faq_update_9303');

  // Output logged messages to related channel of update execution.
  return $updater->logger()->output();
}

/**
 * Deletes invalid path component in entity_view_display configurations.
 */
function openculturas_faq_update_9304(): void {
  $configFactory = \Drupal::configFactory();
  foreach ($configFactory->listAll('core.entity_view_display.node.faq') as $config_name) {
    $config = $configFactory->getEditable($config_name);
    if ($config->isNew()) {
      continue;
    }
    $configData = $config->getRawData();
    unset($configData['content']['path']);
    $config->setData($configData);
    $config->save(TRUE);
  }
}
