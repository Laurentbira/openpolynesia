<?php

/**
 * @file
 * Install, update and uninstall functions for the openculturas_map module.
 */

declare(strict_types=1);

use Drupal\Core\Field\FieldConfigInterface;
use Drupal\field\Entity\FieldConfig;
use Drupal\user\RoleInterface;

/**
 * Implements hook_install().
 */
function openculturas_map_install(bool $is_syncing): void {
  if ($is_syncing) {
    return;
  }

  /** @var \Drupal\Core\Field\FieldConfigInterface|null $field */
  $field = FieldConfig::loadByName('paragraph', 'block', 'field_block_ref');
  if ($field instanceof FieldConfigInterface) {
    $selection_settings = $field->getSetting('selection_settings');
    if ($field->getSetting('selection') === 'categories') {
      $selection_settings['categories']['OpenCulturas - Map'] = 'OpenCulturas - Map';
    }
    elseif ($field->getSetting('selection') === 'blocks') {
      $selection_settings['plugin_ids']['openculturas_map_block'] = 'openculturas_map_block';
    }

    $field->setSetting('selection_settings', $selection_settings);
    $field->save();
  }

  /** @var \Drupal\user\RoleStorageInterface $roleStorage */
  $roleStorage = \Drupal::entityTypeManager()->getStorage('user_role');
  /** @var \Drupal\user\RoleInterface|null $role */
  $role = $roleStorage->load('oc_admin');
  if ($role instanceof RoleInterface) {
    $role->grantPermission('administer openculturas_map configuration');
    $role->save();
  }

}

/**
 * Implements hook_uninstall().
 */
function openculturas_map_uninstall(bool $is_syncing): void {
  if ($is_syncing) {
    return;
  }

  /** @var \Drupal\Core\Field\FieldConfigInterface|null $field */
  $field = FieldConfig::loadByName('paragraph', 'block', 'field_block_ref');
  if ($field instanceof FieldConfigInterface) {
    $selection_settings = $field->getSetting('selection_settings');
    if ($field->getSetting('selection') === 'categories') {
      unset($selection_settings['categories']['OpenCulturas - Map']);
    }
    elseif ($field->getSetting('selection') === 'blocks') {
      unset($selection_settings['plugin_ids']['openculturas_map_block']);
    }

    $field->setSetting('selection_settings', $selection_settings);
    $field->save();
  }
}

/**
 * Grant permission administer openculturas_map configuration to oc_admin role.
 */
function openculturas_map_update_10001(): void {
  /** @var \Drupal\user\RoleStorageInterface $roleStorage */
  $roleStorage = \Drupal::entityTypeManager()->getStorage('user_role');
  /** @var \Drupal\user\RoleInterface|null $role */
  $role = $roleStorage->load('oc_admin');
  if ($role instanceof RoleInterface) {
    $role->grantPermission('administer openculturas_map configuration');
    $role->save();
  }
}

/**
 * Always show reset button (views.view.oc_map_locations).
 */
function openculturas_map_update_10002(): void {
  $configFactory = \Drupal::configFactory();
  $config = $configFactory->getEditable('views.view.oc_map_locations');
  $config->set('display.default.display_options.exposed_form.options.bef.general.reset_button_always_show', TRUE);
  $config->save();
}
