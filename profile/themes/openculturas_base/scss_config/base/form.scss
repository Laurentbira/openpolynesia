form,
.block-facets,
.form-area {
  background: $color-bg-form;

  >.form--inline,
  >.form-item,
  >.form-wrapper,
  >details.form-wrapper,
  >p,
  >[id*=ajax-wrapper],
  >[class*=facets-widget] {
    width: auto !important;
    margin-right: $grid-gutter;

    // Padding without adding padding to FORM Tag (which would mess up button positioning).
    margin-left: $grid-gutter;

    &:first-child {
      padding-top: $grid-gutter;
    }

    &:last-of-type {
      padding-bottom: $grid-gutter;
    }
  }
}

.description {
  @extend %small;
}

// .js-hide {
//  display: none !important;
// }


.form-textarea-wrapper,
.filter-wrapper {
  background: $color-bg-fieldset;

  .cke_top,
  .cke_contents,
  .cke_bottom {
    background: $color-bg-fieldset;
  }
  .filter-guidelines-item {
    margin: 0;
  }
}

.field-suffix .button {
  margin-bottom: $grid-gutter;
}

fieldset {
  padding: $grid-gutter;
  background: $color-bg-fieldset;

  summary,
  legend {
      @extend %allcaps;
    }

  &.error {
    border: 2px solid $color-danger;
    > legend {
      color: $color-danger;
    }
  }
}

fieldset fieldset {
  padding: 0;
  border-width: 0;
  background: transparent;
}

.form-required::after {
  content: '*';
  vertical-align: text-top;
  color: $color-danger;
  background-image: none;
}

.form--inline {
  .form-item {
    margin-top: 0;
  }
}

label {
  display: block;
  padding: .25rem;
  &.option {
    display: inline-block;
  }
}

input,
select,
textarea {
  padding: 0.5rem 1rem;
  border: 1px solid $color-divider-dark;
  background: $color-bg-light;
  &:focus {
    border-bottom-color: $color-info;
    box-shadow: 0 3px 2px 0 $color-info;
  }

  &.error {
    border-bottom-color: $color-danger;
    box-shadow: 0 3px 2px 0 $color-info;
  }
}

*::placeholder {
  text-align: right;
  color: $color-text-muted;
}

.form-autocomplete {
  padding-right: 2rem;
  background-position: right 0.5rem center!important;
}

// Responsive forms.
input[size] {
  width: 100%;
  max-width: 100%;

  // @include breakpoint(m) {
  //  width: auto;
  // }

}

input[size='30'] {
  @include breakpoint(l) {
    max-width: 15rem;
  }
}

input.bef-datepicker {
  max-width: 10rem;
}

.view-search input[size='30'] {
  @include breakpoint(l) {
    max-width: 30rem;
  }
}


select {
  position: relative;
  padding-right: 2rem;
  background: $color-bg-light url(../images/chevron-down.svg) right 0.5em top 0.5em no-repeat;
  background-size: 1em;
  appearance:none;
  &[multiple].slimselect:not([data-once]) {
    height: 2.48rem;
    background: $color-bg-light;
    optgroup, option {
      visibility: hidden;
    }
  }
}

// @todo move slimselect to dedicated scss file
// place slimselect css in ss module folder

.slimselect {
  --ss-primary-color: var(--color-interaction);
  --ss-bg-color: var(--color-bg-light);
  --ss-font-color: var(--color-text);
  --ss-font-placeholder-color: #1f1f1f66; // todo later: remove disallowed color functions, use muted color 50%
  --ss-disabled-color: var(--color-bg-slight-contrast);
  --ss-border-color: var(--color-interaction);
  
  // --ss-highlight-color: ;
  --ss-success-color: var(--color-success);
  --ss-error-color: var(--color-danger);
  --ss-focus-color: var(--color-focus);
  --ss-main-height: 2.5rem; // adjust to standard select height

  // --ss-content-height: ;
  --ss-spacing-l: 0.5em; // ! used in removal button
  --ss-spacing-m: 0.5em;
  --ss-spacing-s: 0.25em;
  --ss-animation-timing: 0.2s;
  --ss-border-radius: var(--button-border-radius);
}

.ss-main {
  width: 18rem;
  padding: 0.5rem 0 0.5rem 1rem;
  border: 1px solid var(--color-divider-dark);
  border-radius: 0;

  .ss-arrow {
    margin: var(--ss-spacing-s) var(--ss-spacing-m) auto var(--ss-spacing-m); // align top
    padding-right: 2rem;
    background: $color-bg-light url(../images/chevron-down.svg) no-repeat;
    background-position: 0.5em;
    background-size: 1em;
    path {
      visibility: hidden;
    }
  }
  .ss-values {
    // height: 1.3rem;
    overflow-y: scroll;
    scrollbar-width: none;
    -ms-overflow-style: none;
    &::-webkit-scrollbar {
      width: 0;
      height: 0;
    }
    .ss-placeholder {
      padding: 0;
    }
    .ss-value {
      // background-color: var(--color-primary)!important;
      .ss-value-text {
        font-size: var(--font-size-s);
      }
      .ss-value-delete {
        border-left-width: 0;
      }
    }
  }
}

select[multiple].slimselect:not([data-once]) {
  height: 2.48rem;

  // background: $color-bg-light;
  optgroup, option {
    visibility: hidden;
  }
}

// we redefine ss custom properties instead
// .ss-content .ss-list .ss-option:not(.ss-disabled).ss-selected, .ss-option:hover {
//  //color: var(--color-primary);
//  background-color: var(--color-primary)!important;
// }

// end @todo slimselect

input[type="checkbox"],
input[type="radio"] {
  position: relative;
  top: .1rem;
  width: 1em;
  height: 1em;
  margin-right: .5rem;
  vertical-align: baseline;
}


// Autocomplete widget select.
.ui-menu .ui-menu-item-wrapper {
  display: block;
  color: $color-text;
  border: 0;
  background-color: transparent;

  &:hover,
  &:focus {
    color: $color-text-inverted;
    border: 0;
    background-color: $color-link;
  }
}

// Autocomplete widget select Focus.
.ui-autocomplete,
.ui-dialog .ui-autocomplete {

  .ui-menu-item-wrapper.ui-state-active {
    margin: 0;
    color: $color-text-inverted;
    background-color: $color-interaction;
  }
}

*[disabled] {
  pointer-events: none;
  opacity: .5;
}

// Views exposed forms

.bef-exposed-form {
  margin-top: $grid-gutter;
  padding-bottom: .75rem;
  border-width: 1px 0 1px;

  .form--inline .details-wrapper,
  > div {
    display: flex;
    flex-flow: row wrap;
    gap: .25rem 1rem;

    // align-items: last baseline;
    padding-bottom: .5rem;
  }

  // checkbox has no label above
  .form-type-checkbox {

    input {
      margin-right: .125em;
      font-size: 1.5em;
    }
    @include breakpoint(m) {
      padding-top: 2.25rem;
      padding-bottom: .25rem;
    }
  }

  .form-submit {
    margin-bottom: 0;
  }

  // submit button alignment
  .form--inline .form-actions {
    align-self: flex-end;
  }

// /* Secondary filters above default exposed form */
//  .bef--secondary {
//    order: -1;
//  }

}

// Views exposed form in displays with "compact" css class

// .path-user .views-exposed-form,
div#block-oc-search-input,
.form--compact {
  .form--inline  {

    &:first-child {
      padding-top: .25rem;
    }
    &:last-of-type {
      padding-bottom: 1rem;
    }
    .form-type-textfield {
      flex: 2 2 auto;
    }
    .form-actions {
      flex: 1 1 auto;
    }

    @include breakpoint(m) {
      display: flex;
      align-items: flex-end;
      gap: 1.25rem;

      * {
        margin: 0;
      }
    }
  }
  .form-text {
    max-width: 100%;
  }
  .details-wrapper {
    padding: 0;
  }
}

// @todo: add more robust identifier to fieldset
fieldset[id^="edit-radius-wrapper"] {
  // width: 100%;
  width: auto;
  margin: 0;
  padding: 0;
  border: 0;
  background: transparent;

  legend {
    overflow: hidden;
    width: 0;
    height: 0;
  }

  .fieldset-wrapper {
    display: flex;
  }

  .form-item-radius-value {
    order: +1;
    max-width: 9rem;
  }

  .address-input {
    @include breakpoint (l) {
      max-width: 31.25rem;
    }
  }

  .form--inline:last-of-type {
    padding-bottom: 0;
  }

}

.block-facets {
  h4 {
    margin-bottom: 0 $grid-gutter $grid-gutter;
    padding: .5em 1rem;
  }
  ul {
    margin: 0;
    padding: 0;
    list-style: none outside;
  }
  li {
    display: inline-block;
    margin: 0;
    padding: 0;
    list-style: none;
  }
}

.region-content > .block-facets {
  margin-top: 0 !important;
  margin-bottom: 0 !important;
}

// View password module fix

button:not([disabled]).shwpd {
  position: absolute;
  top: 2.75rem;
  right: 1rem;
  left: auto;
  display: block;
  padding: .5rem .25rem;

  &:focus,
  &:hover {
    background-color: var(--color-bg-light);
  }
  &:focus,
  &:active {
    border: 2px dashed var(--color-interaction);
  }
}

input[type="password"],
.form-type-password input[type="text"] {
  padding-right: 3rem;
}

// Workflow moderation form

.content-moderation-entity-moderation-form {
  margin-bottom: (2 * $grid-gutter);
  padding: $grid-gutter (2 * $grid-gutter) $grid-gutter;
  background-color: $color-bg-warning;
}

.entity-moderation-form {
  margin: 0 $grid-gutter $grid-gutter;
  border: 0 none;
  background-color: transparent;

  li {
    margin-bottom: 0;
  }

  .form-item label {
    @extend %label;

    padding-left: 0;
  }
}

// Password indicator (@todo check back with contrib classy theme)

.password-strength__indicator {
  border: 1px solid transparent;

  &.is-weak {
    border-color: var(--color-danger);
    background-color: var(--color-danger);
  }
  &.is-fair {
    border-color: var(--color-warning-dark);
    background-color: var(--color-warning);
  }
  &.is-good {
    border-color: var(--color-info);
    background-color: var(--color-info);
  }
  &.is-strong {
    border-color: var(--color-success);
    background-color: var(--color-success);
  }
}

.password-suggestions {
  padding: 0.5rem 1rem 1rem;
  color: var(--color-info);
  border-color: var(--color-info);
  background-color: var(--color-bg-info);
}


