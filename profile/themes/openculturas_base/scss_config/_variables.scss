//
// @file:
//  Variables definition file.
//

//
//  Grid base definition.
//
//  Has effect on the grid wherever it is used.
//
$grid-gutter: 1.25rem; // The grid gap between columns.
$grid-column-count: 16; // The default amount of columns added to a grid if there is no override.
$grid-layout-max-width: 68.75rem; // Maximum width of the grid to prevent the site from getting to wide on large screens.

//
//  Utility Classes Grid system definition.
//
//  If you need more info on how this works, have a look into grid.scss.
//
//  The key of the map defines the selector and the value how many columns the grid should have.
//  You can add new values to the grid if you need utility classes with more columns.
//  These settings will only have an effect on the utility classes and not on the main layout grid.
//
$utility_grids: (
  'grid-1': 1,
  'grid-2': 2,
  'grid-3': 3,
  'grid-4': 4
);

//
//  Selectors for setting the grid on sub-elements with utility classes.
//
//  BEWARE: Unlike other systems like bootstrap f.e.
//  the grid will not be defined on the element containing the class directly.
//  Instead it will be set on the following selectors beneath the set class element.
//  You can add more selectors this setting if you need the grid to work on more elements.
//
$utility_grids_container_selectors: '> .view-content, > .field__items, > .details-wrapper';

//
//  Breakpoint definitions.
//
//  This map defines all the breakpoints used by openculturas_base to be easily used in scss files.
//
//  Have a look at the 'breakpoint' mixin in mixins.scss for more info on how to use it.
//
//  You can change the values to match your design better, by changing the media selectors.
//  Also you can add new breakpoints if you need them.
//
//  But BEWARE: It is NOT recommended to DELETE any of the default breakpoint definitions below.
//  Since they are used by the scss files, this would most likely result in a broken compilation process.
//
$breakpoints: (
  xs: 'max-width: 29.9375rem',
  s: 'min-width: 30rem',
  m: 'min-width: 48rem',
  l: 'min-width: 62rem',
  xl: 'min-width: #{$grid-layout-max-width}'
);

//
// Colors.
//
// CAUTION:
//   Do not change CSS color variable names (in base theme)
//
// This would lead to inconsistent results when changing the colors with
// css_color_variables_ui module.
// Any changes require updating the color.inc and css_color_variables_dependants.yml
//
:root {
  /**
   * Default colors
   *
   * Changeable by css_color_variables or Color Module settings.
  **/
  --color-primary: #a1167f;
  --color-interaction:  #483d8b; // Secondary
  --color-text: #1f1f1f;
  --color-text-muted: #7b7d85;
  --color-text-inverted: #ffffff;
  --color-headline: #1f1f1f;
  --color-link: #a1167f;
  --color-danger: #d51317 ;
  --color-info: #1f71b8;
  --color-success: #188009;
  --color-warning: #ffc400;
  --color-neutral-canvas: #F6F6F6;
  --color-bg-dark: #303236;
  --color-bg-slight-contrast: #b1b2b5;
  --color-bg-light: #ffffff;
  --color-divider-light: #e8e9eb;
  --color-divider-dark: #7b7d85;

  /**
   * Default font-sizes
  **/
  --font-size-xxl: 2rem;
  --font-size-xl: 1.5rem;
  --font-size-l: 1.25rem;
  --font-size-default: 1rem;
  --font-size-s: .875rem;
  --font-size-icon: 1.5rem;

  @include breakpoint(m) {
    --font-size-xxl: 2.5rem;
    --font-size-xl: 1.75rem;
  }
}

//
// SASS-color-variables containing CSS-variables
//
// Why we reasign CSS vars to SASS variables?
// + Basetheme uses strict SASS based color Schema (vs Undefined CSS vars fail silently).
// + A clearly defined set of CSS Variables keeps Subthemes working.
// + Easy subtheming with UI configurable base and easy to define derivate colors.
// + Better readability and support in IDE for SSASS variables.
// + No need to write var(--bla) everywhere.
// Disadvantage:
// - SASS color functions do not work.
//   They are disabled and throw error when used.
//   --> Prefer css_color_variables_dependant variables like:
//    --color-danger-lighten-85
//    --color-danger-darken-25
//    --color-primary--opacity-16
//   --> Make use of Hexadecimal opacity:
//       #0000007F not rgba(0, 0, 0, 0.5)
//   --> Check out openculturas_base/color/css_color_variables_dependants.yml
//       and the UI at /css_color_variables_demopage to check out colors and derivate-variants.
//
$color-primary: var(--color-primary);
$color-interaction: var(--color-interaction);
$color-text: var(--color-text);
$color-text-muted: var(--color-text-muted);
$color-text-inverted: var(--color-text-inverted);
$color-headline: var(--color-headline);
$color-link: var(--color-link);

$color-neutral-canvas: var(--color-neutral-canvas);
$color-bg-dark: var(--color-bg-dark);
$color-bg-slight-contrast: var(--color-bg-slight-contrast);
$color-bg-light: var(--color-bg-light);

$color-divider-light: var(--color-divider-light);
$color-divider-dark: var(--color-divider-dark);

$color-danger: var(--color-danger);
$color-info: var(--color-info);
$color-success: var(--color-success);
$color-warning: var(--color-warning);

// Derivate Colors
// can not directly be changed in UI / Color module.
$color-bg-danger: var(--color-bg-danger);
$color-danger-dark: var(--color-danger-dark);
$color-bg-info: var(--color-bg-info);
$color-bg-dark: var(--color-bg-dark);
$color-bg-success: var(--color-bg-success);
$color-success-dark: var(--color-success-dark);
$color-bg-warning: var(--color-bg-warning);
$color-warning-dark: var(--color-warning-dark);

$color-bg-form: var(--color-bg-form);
$color-bg-fieldset: var(--color-bg-fieldset);
$color-box-shaddow: var(--color-interaction--opacity-64);
$color-bg-cluster-icon: var(--color-link--opacity-64);

/**
 * Default derivated colors
 *
 * are changed when base colors are changed by css_color_variables or Color Module settings.
 *
 * NOTE:
 *  CSS variables should be reasigned here.
*   If you do it in :root, they will not change with Color UI changes
 */
body {
  /* Alerts */
  --color-bg-danger: var(--color-danger-lighten-85, #f9dcdd);
  --color-danger-dark: var(--color-danger-darken-25, #a00f12);
  --color-bg-info: var(--color-info-lighten-85, #deeaf5);
  --color-info-dark: var(--color-info-darken-25, #18558a);
  --color-bg-success: var(--color-success-lighten-85, #ddecdb);
  --color-success-dark: var(--color-success-darken-25, #126007);
  --color-bg-warning: var(--color-warning-lighten-85, #fff7d9);
  --color-warning-dark: var(--color-warning-darken-25, #c09300);

  /* Form & other colors */
  --color-bg-form: var(--color-interaction--lighten-95, #f6f6fa);
  --color-bg-fieldset: var(--color-interaction--opacity-4, #483d8b07);
  --color-box-shaddow: var(--color-box-shaddow, #483d8ba3);
  --outline-active: 2px dashed var(--color-interaction, #483d8b);
  --color-bg-cluster-icon: var(--color-link--opacity-64, #a1167fa3);
}

//
//  Default font mapping for headlines and body text.
//
//  @see: fonts.scss file.
//
$font-base: var(--font-base);
$font-head: var(--font-head);

// FontSizes
$font-size-xxl: var(--font-size-xxl);
$font-size-xl: var(--font-size-xl);
$font-size-l: var(--font-size-l);
$font-size-default: var(--font-size-default);
$font-size-s: var(--font-size-s);
$font-size-icon: var(--font-size-icon);

// Default active style
$outline-active: var(--outline-active);
$button-border-radius: 4px !default;

//
//  Fontawesome 6.
//
//  This theme comes with a copy of fontawesome 6 free version.
//  You can use fontawesome like the official documentation with setting <i> elements or via scss mixins.
//
//  Have a look for the 'icon' mixin in mixins.scss for more info on how to use it.
//
//  The fontawesome package lives in 'themes/openculturas_base/fontawesome6', so we need to tell the fontawesome
//  scss config, that our copy is in another directory relative to the compiled css file, for the font paths to resolve.
//
$fa-font-path: '../fontawesome6/webfonts';

//
//  Fontawesome extend-only selectors for webfont names.
//
//  As long as you are using fontawesome 6 this should not need a change.
//  These selectors work as a mapping for the 'icon' mixin so it will map icons to the right webfonts.
//
//  If for any reason, fontawesome decides they want to rename their webfonts, this is the place to adapt the new names.
//
%fas,
%fa-solid {
  font-family: 'Font Awesome 6 Free';
  font-weight: 900;
}

%fab,
%fa-brands {
  font-family: 'Font Awesome 6 Brands';
  font-weight: 400;
}
