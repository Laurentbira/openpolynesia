// Set base styles for f.e. h1-h6 automatically.
@each $name, $def in $fontStyles {
  #{$name}, .#{$name} {
    @include typo($name);
  }
}

h1.teaser,
h2.teaser,
h3.teaser,
h4.teaser,
h5.teaser,
h6.teaser {
  @include typo(teaser);
}

a {
  @include link-default;
}

p {
  @include typo(body);
  margin-bottom: 1em;

  &:last-child {
    margin-bottom: 0;
  }
}

.content {
  // TODO: This has been moved to body.
  //color: $color-text;

  ul {
    list-style: disc outside;
    margin-left: $grid-gutter;

    ul {
      list-style-type: circle;
      margin-bottom: $grid-gutter;

      ul {
        list-style-type: square;
      }
    }
    &.inline {
      margin-left: 0;
      li {
        display: inline-block;
      }
    }
  }


  ol {
    margin-left: $grid-gutter;

    ol {
      margin-bottom: $grid-gutter;
    }
  }

  li {
    margin-bottom: 0.5em;

    &:last-child {
      margin-bottom: 0;
    }
  }

  li.menu-item {
    padding-top: 0;
  }

  table {
    margin: 1em auto;
    max-width: 100%;
    display: block;
    overflow-x: auto;

    caption {
      @include typo(allcaps);
    }

    th {
      color: $color-text-muted;
      text-align: left;
    }

    td, th {
      padding: 0.5em;
    }

    tr {
      // TODO Is this OK?
      border-bottom: 1px solid $color-primary;
    }

    .field-multiple-drag {
      white-space: nowrap;
    }

    .draggable {
      position: relative;
      .tabledrag-handle {
        display: block;
        width: 2rem;
        height: 2rem;
        position: absolute;
        top: calc(50% - 0.55rem);

        .handle {
          width: 2rem;
          height: 2rem;
        }
      }
    }
  }

  dl {
    margin-bottom: 1em;
    margin-left: $grid-gutter;

    &:last-child {
      margin-bottom: 0;
    }
  }

  dt {
    margin-bottom: 0.5em;
    margin-left: $grid-gutter;

    &:last-of-type {
      margin-bottom: 0;
    }
  }

  dd {
    margin-bottom: 1em;
  }

  blockquote,
  blockquote p {
    @include typo(h3);
    font-size: size(h4);
    @include breakpoint(m) {
      font-size: size(h3);
    }
    margin: $grid-gutter * 2 0;
    font-style: italic;
    color: $color-text-muted;
  }

  blockquote {
    padding: 0 $grid-gutter;
    text-align: center;
    position: relative;

    @include breakpoint(m) {
      padding: 0 $grid-gutter * 3;
    }

    @include icon(quote-right, fas, before) {
      position: absolute;
      left: 0;
      top: 0;
    }
    @include icon(quote-left, fas, after){
      position: absolute;
      right: 0;
      bottom: 0;
    };

    > *:first-child {
      margin-top: 0;
    }
  }

  hr {
    border-color: $color-divider-dark;
  }

  strong, b {
    font-weight: bold;
  }

  em, i, cite, dfn {
    font-style: italic;
  }

  i.far, i.fa, i.fab, i.fal, i.fad {
    font-style: normal;
  }

  u {
    text-decoration: underline;
  }

  del {
    text-decoration: line-through;
  }

  sub {
    font-size: 0.75em;
    position: relative;
    bottom: -0.25em;
  }

  sup {
    font-size: 0.75em;
    position: relative;
    top: -0.5em;
  }

  small {
    font-size: 0.8em;
  }

  abbr {
    text-decoration: none;
    border-bottom:2px dotted $color-text-muted;
  }

  kbd {
    background: $color-text-muted;
    border: thin solid $color-text;
    border-radius: 2px;
    box-shadow: 1px 2px 2px $color-bg-light;
    font-family: inherit;
    font-size: 0.9em;
    padding: 0 0.5em;
  }

  q{
    &:before {content: "„";}
    &:after {content: "“";}
  }

  mark {
    background-color: $color-bg-slight-contrast;
  }

  code {
    white-space: pre;
    font-family: monospace;
    max-width: 100%;
    overflow: scroll;
    display: inline-block;
    padding-bottom: 0.5rem;
  }

  samp, var {
    font-family: monospace;
  }

  .caption,
  .footnote {
    @include typo(small);
  }
}

